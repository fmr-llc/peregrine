#
# Configuration methodology
# 1. propertiesConfig = properties based configuration
#   properties based configuration is generally suitable for small
#   infrequently modified configurations.
# 2. serviceConfig = rest service based configuration
#   service based configuration requires a jvm parameter called:
#   configserviceurl to externally source configuration information.
# 3. databaseConfig = configuration information stored in a database
#
#

publisher.configtype=propertiesConfig


# *************************************************************************
# Message Broker connection properties
# Currently the system support a variable number of simultaneous broker
# connections using either activemq or kafka

broker.one.name=kafka
broker.one.class=com.alliancefoundry.publisher.impl.kafka.KafkaPublisher
broker.one.url=localhost:9092

broker.two.name=activemqpub
broker.two.class=com.alliancefoundry.publisher.impl.amq.ActiveMQPublisher
broker.two.url=tcp://localhost:61616


# *************************************************************************
# Message Type to destination mappings.
message.type.test-message=activemqpub|queue://test1.queue
message.type.eventtype2=activemqpub|queue://test2.queue


# *************************************************************************
# Persistence Configuration
# only a single database can be used for persistence per runtime session.

# Derby Embedded Database configuration (Not for production use.)
db.dataSourceClassName=org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource
db.hikari.maximumPoolSize=10
db.hikari.idleTimeout=30000
db.dataSource.url=jdbc:derby:event;create=true
db.dataSource.username=root
db.dataSource.password=root
db.dataSource.maxLifetime=30000
db.dataSource.connectionTestQuery=SELECT 1
db.prepStmtCacheSize=250
db.prepStmtCacheSqlLimit=2048
db.cachePrepStmts=true
db.useServerPrepStmts=true